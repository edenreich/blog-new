# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: CI / CD

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  push:
    branches:
      - main

env:
  TAG: $(git rev-parse --short HEAD)
  PREVIEW_URL: preview-app-${{ github.event.pull_request.number }}.eden-reich.com
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    runs-on:
      - self-hosted
      - k8s
    steps:
      - uses: actions/checkout@v3

      - name: Login
        run: |
          echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u edenreich --password-stdin

      - name: Build container image
        run: |
          TAG=${{ env.TAG }} make package

      - name: Push container image to ghcr.io
        run: |
          TAG=${{ env.TAG }} make push

  create-preview-environment:
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    needs: build
    environment:
      name: preview
      url: https://${{ env.PREVIEW_URL }}
    env:
      FILE: argocd/01-clusters/staging/blog-preview-${{ github.event.pull_request.number }}.yaml
    runs-on:
      - self-hosted
      - k8s
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v3
        with:
          repository: edenreich/infrastructure
          ref: main
          token: ${{ env.GITHUB_TOKEN }}

      - name: Create ArgoCD Application
        run: |
          cat <<-EOF > ${{ env.FILE }}
          # This file was auto-generated by the CI pipeline in the blog repository.
          ---
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: preview-environment-${{ github.event.pull_request.number }}
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
            labels:
              name: preview-environment-${{ github.event.pull_request.number }}
              project: staging
          spec:
            project: staging
            source:
              repoURL: ${{ github.server_url }}/${{ github.repository }}.git
              targetRevision: ${{ github.head_ref }}
              path: helm
              helm:
                parameters:
                  - name: image.tag
                    value: ${{ env.TAG }}
                  - name: ingress.enabled
                    value: "true"
                  - name: ingress.hosts[0].host
                    value: ${{ env.PREVIEW_URL }}
                  - name: ingress.hosts[0].paths[0].path
                    value: /
                  - name: ingress.hosts[0].paths[0].pathType
                    value: Prefix
                  - name: ingress.hosts[0].paths[0].backend.service.name
                    value: blog
                  - name: ingress.hosts[0].paths[0].backend.service.port.number
                    value: "8080"
            destination:
              namespace: preview-environment-${{ github.event.pull_request.number }}
              name: staging
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
          EOF
          git diff --color main

      - name: Push ArgoCD Application
        run: |
          git config --global user.email "eden.reich@gmail.com"
          git config --global user.name "Blog"
          git add ${{ env.FILE }}
          git commit -m "Add preview environment for PR #${{ github.event.pull_request.number }}"
          git push origin main

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    environment:
      name: production
      url: https://eden-reich.com
    env:
      FILE: argocd/01-clusters/production/blog.yaml
    runs-on:
      - self-hosted
      - k8s
    steps:
      - name: Checkout blog repository
        uses: actions/checkout@v3
        with:
          repository: edenreich/infrastructure
          ref: main
          token: ${{ env.GITHUB_TOKEN }}

      - name: Patch ArgoCD Application
        run: |
          cat <<-EOF > ${{ env.FILE }}
          # This file was auto-generated by the CI pipeline in the blog repository.
          ---
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: blog
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
            labels:
              name: blog
              project: production
          spec:
            project: production
            source:
              repoURL: ${{ github.server_url }}/${{ github.repository }}.git
              targetRevision: main
              path: helm
              helm:
                parameters:
                  - name: image.tag
                    value: ${{ env.TAG }}
                  - name: ingress.enabled
                    value: "true"
                  - name: ingress.annotations."nginx\.ingress\.kubernetes\.io/from-to-www-redirect"
                    value: "true"
                  - name: ingress.hosts[0].host
                    value: eden-reich.com
                  - name: ingress.hosts[0].paths[0].path
                    value: /
                  - name: ingress.hosts[0].paths[0].pathType
                    value: Prefix
                  - name: ingress.hosts[0].paths[0].backend.service.name
                    value: blog
                  - name: ingress.hosts[0].paths[0].backend.service.port.number
                    value: "8080"
                  - name: ingress.hosts[1].host
                    value: www.eden-reich.com
                  - name: ingress.hosts[1].paths[0].path
                    value: /
                  - name: ingress.hosts[1].paths[0].pathType
                    value: Prefix
                  - name: ingress.hosts[1].paths[0].backend.service.name
                    value: blog
                  - name: ingress.hosts[1].paths[0].backend.service.port.number
                    value: "8080"
            destination:
              namespace: blog
              name: production
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
          EOF

      - name: Push ArgoCD Application
        run: |
          git config --global user.email "eden.reich@gmail.com"
          git config --global user.name "Blog"
          git add ${{ env.FILE }}
          git commit -m "Bump blog production version to ${{ env.TAG }}"
          git push

