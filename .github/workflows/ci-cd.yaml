# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: CI / CD

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  push:
    branches:
      - main

env:
  TAG: $(git rev-parse --short HEAD)
  PREVIEW_URL: https://preview-app-${{ github.event.pull_request.number }}.eden-reich.com

jobs:
  build:
    runs-on:
      - self-hosted
      - k8s
    steps:
      - uses: actions/checkout@v3

      - name: Login
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build container image
        run: |
          TAG=${{ env.TAG }} make package

      - name: Push container image to ghcr.io
        run: |
          TAG=${{ env.TAG }} make push

  create-preview-environment:
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    needs: build
    environment:
      name: preview
      url: ${{ env.PREVIEW_URL }}
    env:
      FILE: argocd/01-clusters/staging/blog-preview-${{ github.event.pull_request.number }}.yaml
    runs-on:
      - self-hosted
      - k8s
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v3
        with:
          repository: edenreich/infrastructure
          ref: main

      - name: Login
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Create ArgoCD Application
        run: |
          cat <<-EOF > ${{ env.FILE }}
          # This file was auto-generated by the CI pipeline in the blog repository.
          ---
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: preview-environment-${{ github.event.pull_request.number }}
            namespace: argocd
          spec:
            project: staging
            source:
              repoURL: ${{ github.repository }}
              targetRevision: ${{ github.ref_name }}
              path: k8s
            destination:
              namespace: preview-environment-${{ github.event.pull_request.number }}
              name: staging
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
          EOF
          git diff --color main

      - name: Push ArgoCD Application
        run: |
          git config --global user.email "blog@eden-reich.com"
          git config --global user.name "Blog"
          git add ${{ env.FILE }}
          git commit -m "Add preview environment for PR #${{ github.event.pull_request.number }}"
          git push

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://eden-reich.com
    env:
      FILE: k8s/production/kustomization.yaml
    runs-on:
      - self-hosted
      - k8s
    steps:
      - name: Checkout blog repository
        uses: actions/checkout@v3

      - name: Patch ArgoCD Application
        run: |
          cat <<-EOF > ${{ env.FILE }}
          # This file was auto-generated by the CI pipeline.
          ---
          resources:
            - ../base
          
          patches:
            - target:
                kind: Deployment
                name: blog
              patch: |-
                - op: replace
                  path: /spec/template/spec/containers/0/image
                  value: ghcr.io/edenreich/blog-frontend:${{ env.TAG }}
            - target:
                kind: Ingress
                name: blog
              patch: |-
                - op: replace
                  path: /spec/rules/0/host
                  value: eden-reich.com
                - op: add
                  path: /metadata/annotations/nginx.ingress.kubernetes.io~1from-to-www-redirect
                  value: "true"
          EOF

      - name: Push ArgoCD Application
        run: |
          git config --global user.email "blog@eden-reich.com"
          git config --global user.name "Blog"
          git add ${{ env.FILE }}
          git commit -m "Bump blog production version to ${{ env.TAG }}"
          git push

